Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_4_2024_1_26_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_4_2024_1_26_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_4_2024_1_26_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_4_2024_1_26_PM_[Changes]/shelved.patch	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ /dev/null	(revision dc6338969130986c322b09417247dcfdfdf8521d)
@@ -1,95 +0,0 @@
-Index: Api/extras.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from .credentials import CLIENT_ID, CLIENT_SECRET\r\nfrom .models import Token\r\nfrom django.utils import timezone\r\nfrom datetime import timedelta\r\nfrom requests import post\r\nfrom .credentials import CLIENT_ID, CLIENT_SECRET, REDIRECT_URI\r\n\r\nBASE_URL = 'https://api.spotify.com/v1/me'\r\n\r\ndef check_tokens(session_id):\r\n    tokens = Token.objects.filter(user=session_id)\r\n    if tokens:\r\n        return tokens[0]\r\n    else:\r\n        return None\r\n\r\ndef create_or_update_tokens(session_id, access_token, refresh_token, expires_in, token_type):\r\n    tokens = check_tokens(session_id)\r\n    expires_in = timezone.now() + timedelta(seconds=expires_in)\r\n\r\n    if tokens:\r\n        tokens.access_token = access_token\r\n        tokens.refresh_token = refresh_token\r\n        tokens.expires_in = expires_in\r\n        tokens.token_type = token_type\r\n        tokens.save(update_fields=['access_token', 'refresh_token', 'expires_in', 'token_type'])\r\n    else:\r\n        token = Token(\r\n            user = session_id,\r\n            access_token = access_token,\r\n            refresh_token = refresh_token,\r\n            expires_in = expires_in,\r\n            token_type = token_type,\r\n        )\r\n        tokens.save()\r\n\r\ndef is_spotify_authenticated(session_id):\r\n    tokens = check_tokens(session_id)\r\n    if tokens:\r\n        if tokens.expires_in <= timezone.now():\r\n            pass\r\n        return True\r\n    return False\r\ndef refresh_token_func(session_id):\r\n    refresh_token = check_tokens(session_id).refresh_token\r\n    response = post('https://accounts.spotify.com/api/token', {\r\n        'grant_type': 'refresh_token',\r\n        'refresh_token': refresh_token,\r\n        'client_id': CLIENT_ID,\r\n        'client_secret': CLIENT_SECRET,\r\n    })\r\n\r\n    access_token = response.get('access_token')\r\n    expires_in = response.get('expires_in')\r\n    token_type = response.get('token_type')\r\n\r\n    create_or_update_tokens(\r\n        sessionId=session_id,\r\n        access_token=access_token,\r\n        refresh_token=refresh_token,\r\n        expires_in=expires_in,\r\n        token_type=token_type,\r\n    )\r\ndef spotify_requests_execution(session_id, endpoint):\r\n    token = check_tokens(session_id)\r\n    headers = {'Content-Type' : 'application/json', 'Authorization': f'Bearer {token.access_token}'}\r\n\r\n    response = post(BASE_URL + endpoint, {}, headers=headers)\r\n\r\n    if response:\r\n        print(response)\r\n    else:\r\n        print(\"No response\")\r\n\r\n    try:\r\n        return response.json()\r\n    except:\r\n        return {'Error' : 'Issue'}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Api/extras.py b/Api/extras.py
---- a/Api/extras.py	(revision 122107e7a1bbcf163cb47bff53c6445e268113b4)
-+++ b/Api/extras.py	(date 1730744600560)
-@@ -1,3 +1,5 @@
-+from tabnanny import check
-+
- from .credentials import CLIENT_ID, CLIENT_SECRET
- from .models import Token
- from django.utils import timezone
-@@ -16,6 +18,8 @@
- 
- def create_or_update_tokens(session_id, access_token, refresh_token, expires_in, token_type):
-     tokens = check_tokens(session_id)
-+    if expires_in is None:
-+        expires_in = 3600
-     expires_in = timezone.now() + timedelta(seconds=expires_in)
- 
-     if tokens:
-@@ -25,7 +29,7 @@
-         tokens.token_type = token_type
-         tokens.save(update_fields=['access_token', 'refresh_token', 'expires_in', 'token_type'])
-     else:
--        token = Token(
-+        tokens = Token(
-             user = session_id,
-             access_token = access_token,
-             refresh_token = refresh_token,
-Index: Api/views.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from django.shortcuts import render\r\nfrom rest_framework.response import Response\r\nfrom rest_framework.views import APIView\r\nfrom rest_framework import response\r\nfrom rest_framework import status\r\nfrom requests import Request, post\r\nfrom django.http import HttpResponseRedirect\r\nfrom .models import Token\r\n\r\nfrom .credentials import CLIENT_ID,CLIENT_SECRET,REDIRECT_URI\r\nfrom .extras import create_or_update_tokens, is_spotify_authenticated, spotify_requests_execution\r\n\r\n\r\n# Create your views here.\r\n\r\nclass Authentication(APIView):\r\n    def get(self, request, format=None):\r\n        scopes = \"\"\r\n        url = Request('GET', 'https://accounts.spotify.com/authorize', params={\r\n            'scope': scopes,\r\n            'response_type': 'code',\r\n            'redirect_uri': REDIRECT_URI,\r\n            'client_id': CLIENT_ID,\r\n            }).prepare().url\r\n        return HttpResponseRedirect(url)\r\ndef spotify_redirect(request, format=None):\r\n    code = request.GET.get('code')\r\n    error = request.GET.get('error')\r\n\r\n    if error:\r\n        return error\r\n    response = post(\"https://accounts.spotify.com/api/token\", data = {\r\n        'grant_type': 'authorization_code',\r\n        'code': code,\r\n        'redirect_uri': REDIRECT_URI,\r\n        'client_id': CLIENT_ID,\r\n    }).json()\r\n    access_token = response.get('access_token')\r\n    refresh_token = response.get('refresh_token')\r\n    expires_in = response.get('expires_in')\r\n    token_type = response.get('token_type')\r\n\r\n    authKey = request.session.session_key\r\n    if not request.session.exists(authKey):\r\n        request.session.create()\r\n        authKey = request.session.session_key\r\n\r\n    create_or_update_tokens(\r\n        sessionId=authKey,\r\n        access_token=access_token,\r\n        refresh_token=refresh_token,\r\n        expires_in=expires_in,\r\n        token_type=token_type,\r\n    )\r\n\r\n    redirect_url = f\"http://127.0.0.1:8000/spotify/current-song?key={authKey}\"\r\n    return HttpResponseRedirect(redirect_url)\r\n\r\nclass CheckAuthentication(APIView):\r\n    def get(self, request, format=None):\r\n        key = self.request.session.session_key\r\n        if not self.request.session.exists(key):\r\n            self.request.session.create()\r\n            key = self.request.session.session_key\r\n        auth_status = is_spotify_authenticated(key)\r\n\r\n        if auth_status:\r\n            redirect_url = f\"http://127.0.0.1:8000/spotify/current-song?key={key}\"\r\n            return HttpResponseRedirect(redirect_url)\r\n        else:\r\n            redirect_url = \"http://127.0.0.1:8000/spotify/auth-url\"\r\n            return HttpResponseRedirect(redirect_url)\r\nclass CurrentSong(APIView):\r\n    kwarg = \"key\"\r\n    def get(self, request, format=None):\r\n        key = request.GET.get(self.kwarg)\r\n        token = Token.objects.get(user=key)\r\n        print(token)\r\n\r\n        endpoint = \"player/currently-playing\"\r\n        response = spotify_requests_execution(key, endpoint)\r\n\r\n        if \"error\" in response or \"item\" not in response:\r\n            return Response({}, status = status.HTTP_204_NO_CONTENT)\r\n        item = response.get(\"item\")\r\n\r\n        progress = response.get(\"progress\")\r\n        is_playing = response.get(\"is_playing\")\r\n        duration = item.get(\"duration\")\r\n        song_id = item.get(\"id\")\r\n        title = item.get(\"title\")\r\n        album_cover = item.get(\"album\").get(\"images\")[0].get(\"url\")\r\n\r\n        artists = \"\"\r\n        for i,artist in enumerate(item.get(\"artists\")):\r\n            if i>0:\r\n                artists += \", \"\r\n            name = artist.get(\"name\")\r\n            artists += name\r\n\r\n        song = {\r\n            \"id\": song_id,\r\n            \"title\": title,\r\n            \"artists\": artists,\r\n            \"duration\": duration,\r\n            \"is_playing\": is_playing,\r\n            \"album_cover\": album_cover,\r\n            \"is_playing\": is_playing,\r\n        }\r\n\r\n        print(song)\r\n        return Response(song, status = status.HTTP_200_OK)
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Api/views.py b/Api/views.py
---- a/Api/views.py	(revision 122107e7a1bbcf163cb47bff53c6445e268113b4)
-+++ b/Api/views.py	(date 1730744380404)
-@@ -46,7 +46,7 @@
-         authKey = request.session.session_key
- 
-     create_or_update_tokens(
--        sessionId=authKey,
-+        session_id = authKey,
-         access_token=access_token,
-         refresh_token=refresh_token,
-         expires_in=expires_in,
-@@ -68,7 +68,7 @@
-             redirect_url = f"http://127.0.0.1:8000/spotify/current-song?key={key}"
-             return HttpResponseRedirect(redirect_url)
-         else:
--            redirect_url = "http://127.0.0.1:8000/spotify/auth-url"
-+            redirect_url = "http://127.0.0.1:8000/spotify/redirect"
-             return HttpResponseRedirect(redirect_url)
- class CurrentSong(APIView):
-     kwarg = "key"
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"full user auth + redirect\">\r\n      <change afterPath=\"$PROJECT_DIR$/Api/urls.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Api/credentials.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Api/credentials.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Api/extras.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Api/extras.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Api/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Api/views.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SpotifyWrapper/urls.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SpotifyWrapper/urls.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Django Server.SpotifyWrapper.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"UserAuth\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SpotifyWrapper\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"SpotifyWrapper\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n        <env name=\"DJANGO_SETTINGS_MODULE\" value=\"SpotifyWrapper.settings\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"localhost\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.428\" />\r\n        <option value=\"bundled-python-sdk-80e8e15d2b92-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.428\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"\" />\r\n      <created>1730300651790</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1730300651790</updated>\r\n      <workItem from=\"1730300653221\" duration=\"184000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"partial user auth + redirect\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730309034212</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730309034212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"partial user auth + redirect\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730318525387</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730318525387</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"full user auth + redirect\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730318542756</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730318542756</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"partial user auth + redirect\" />\r\n    <MESSAGE value=\"full user auth + redirect\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"full user auth + redirect\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 122107e7a1bbcf163cb47bff53c6445e268113b4)
-+++ b/.idea/workspace.xml	(date 1730744582256)
-@@ -5,12 +5,10 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="8ebb3b2a-d6e2-466a-8852-d90e5934e4e5" name="Changes" comment="full user auth + redirect">
--      <change afterPath="$PROJECT_DIR$/Api/urls.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/Api/credentials.py" beforeDir="false" afterPath="$PROJECT_DIR$/Api/credentials.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/Api/extras.py" beforeDir="false" afterPath="$PROJECT_DIR$/Api/extras.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/Api/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/Api/views.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/SpotifyWrapper/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/SpotifyWrapper/urls.py" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -41,6 +39,8 @@
-   "keyToString": {
-     "Django Server.SpotifyWrapper.executor": "Run",
-     "git-widget-placeholder": "UserAuth",
-+    "node.js.detected.package.eslint": "true",
-+    "node.js.selected.package.eslint": "(autodetect)",
-     "node.js.selected.package.tslint": "(autodetect)"
-   }
- }]]></component>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM__Changes_.xml	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ /dev/null	(revision dc6338969130986c322b09417247dcfdfdf8521d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM_[Changes]" date="1730743185429" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_12_59_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/4/2024 12:59 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM__Changes_.xml	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ /dev/null	(revision dc6338969130986c322b09417247dcfdfdf8521d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]" date="1730302265074" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/30/2024 11:30 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2024_11_30_AM_[Changes]/shelved.patch	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ /dev/null	(revision dc6338969130986c322b09417247dcfdfdf8521d)
@@ -1,94 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/SpotifyWrapper.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SpotifyWrapper\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"SpotifyWrapper\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"localhost\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.428\" />\r\n        <option value=\"bundled-python-sdk-80e8e15d2b92-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.428\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"\" />\r\n      <created>1730300651790</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1730300651790</updated>\r\n      <workItem from=\"1730300653221\" duration=\"184000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 718c289072e1bae0ea5c7eeb58e66512abb6aa2b)
-+++ b/.idea/workspace.xml	(date 1730302123735)
-@@ -1,23 +1,43 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="AutoImportSettings">
-+    <option name="autoReloadType" value="SELECTIVE" />
-+  </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8ebb3b2a-d6e2-466a-8852-d90e5934e4e5" name="Changes" comment="">
--      <change afterPath="$PROJECT_DIR$/.idea/SpotifyWrapper.iml" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+    <list default="true" id="8ebb3b2a-d6e2-466a-8852-d90e5934e4e5" name="Changes" comment="default">
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-     <option name="LAST_RESOLUTION" value="IGNORE" />
-   </component>
-+  <component name="Git.Settings">
-+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-+  </component>
-+  <component name="ProjectColorInfo"><![CDATA[{
-+  "customColor": "",
-+  "associatedIndex": 8
-+}]]></component>
-+  <component name="ProjectId" id="2oA86FilZZNCbvqP0oN2NIfRWww" />
-   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
-   <component name="ProjectViewState">
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{}</component>
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "RunOnceActivity.OpenDjangoStructureViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "git-widget-placeholder": "main",
-+    "node.js.detected.package.eslint": "true",
-+    "node.js.detected.package.tslint": "true",
-+    "node.js.selected.package.eslint": "(autodetect)",
-+    "node.js.selected.package.tslint": "(autodetect)",
-+    "nodejs_package_manager_path": "npm",
-+    "vue.rearranger.settings.migration": "true"
-+  }
-+}]]></component>
-   <component name="RunManager">
-     <configuration name="SpotifyWrapper" type="Python.DjangoServer" factoryName="Django server">
-       <module name="SpotifyWrapper" />
-@@ -61,10 +81,32 @@
-       <option name="presentableId" value="Default" />
-       <updated>1730300651790</updated>
-       <workItem from="1730300653221" duration="184000" />
-+      <workItem from="1730300850012" duration="962000" />
-     </task>
-+    <task id="LOCAL-00001" summary="default">
-+      <option name="closed" value="true" />
-+      <created>1730301119156</created>
-+      <option name="number" value="00001" />
-+      <option name="presentableId" value="LOCAL-00001" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730301119156</updated>
-+    </task>
-+    <task id="LOCAL-00002" summary="default">
-+      <option name="closed" value="true" />
-+      <created>1730301128550</created>
-+      <option name="number" value="00002" />
-+      <option name="presentableId" value="LOCAL-00002" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1730301128550</updated>
-+    </task>
-+    <option name="localTasksCounter" value="3" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-     <option name="version" value="3" />
-   </component>
-+  <component name="VcsManagerConfiguration">
-+    <MESSAGE value="default" />
-+    <option name="LAST_COMMIT_MESSAGE" value="default" />
-+  </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM__Changes_.xml	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ /dev/null	(revision dc6338969130986c322b09417247dcfdfdf8521d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM_[Changes]" date="1730743201962" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_00_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/4/2024 1:00 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.11 (SpotifyWrapper)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.12\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision dc6338969130986c322b09417247dcfdfdf8521d)
+++ b/.idea/misc.xml	(date 1730928892424)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.11 (SpotifyWrapper)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (mysite)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_32_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_4_2024_1_32_PM_[Changes]1/shelved.patch
deleted file mode 100644
