Index: Api/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\nfrom rest_framework.response import Response\r\nfrom rest_framework.views import APIView\r\nfrom rest_framework import status\r\nfrom requests import Request, post\r\nfrom django.http import JsonResponse\r\nfrom .models import Token\r\nfrom .credentials import CLIENT_ID, CLIENT_SECRET, REDIRECT_URI\r\nfrom .extras import create_or_update_tokens, is_spotify_authenticated, spotify_requests_execution\r\n\r\nclass Authentication(APIView):\r\n    def get(self, request, format=None):\r\n        scopes = \"user-read-currently-playing user-read-playback-state user-modify-playback-state\"\r\n        url = Request('GET', 'https://accounts.spotify.com/authorize', params={\r\n            'scope': scopes,\r\n            'response_type': 'code',\r\n            'redirect_uri': REDIRECT_URI,\r\n            'client_id': CLIENT_ID,\r\n        }).prepare().url\r\n        return Response({\"auth_url\": url}, status=status.HTTP_200_OK)\r\n\r\n\r\ndef spotify_redirect(request):\r\n    code = request.GET.get('code')\r\n    error = request.GET.get('error')\r\n\r\n    if error:\r\n        return JsonResponse({\"error\": error}, status=status.HTTP_400_BAD_REQUEST)\r\n\r\n    response = post(\r\n    'https://accounts.spotify.com/api/token',\r\n    data={\r\n        'grant_type': 'authorization_code',\r\n        'code': code,\r\n        'redirect_uri': REDIRECT_URI,\r\n        'client_id': CLIENT_ID,\r\n        'client_secret': CLIENT_SECRET,\r\n    },\r\n    headers={'Content-Type': 'application/x-www-form-urlencoded'}\r\n    ).json()\r\n\r\n    print(\"Authorization Code:\", code)\r\n    #print(\"Spotify Response:\", response.status_code, response.json())\r\n\r\n    access_token = response.get('access_token')\r\n    refresh_token = response.get('refresh_token')\r\n    expires_in = response.get('expires_in', 3600)\r\n    token_type = response.get('token_type')\r\n\r\n    if not access_token or not refresh_token or not expires_in:\r\n        return JsonResponse({\"error\": \"Invalid response from Spotify\"}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)\r\n\r\n    auth_key = request.session.session_key\r\n    if not request.session.exists(auth_key):\r\n        request.session.create()\r\n        auth_key = request.session.session_key\r\n\r\n    create_or_update_tokens(\r\n        session_id=auth_key,\r\n        access_token=access_token,\r\n        refresh_token=refresh_token,\r\n        expires_in=expires_in,\r\n        token_type=token_type,\r\n    )\r\n\r\n    # Return redirect URL as JSON, handle on frontend\r\n    redirect_url = f\"http://127.0.0.1:8000/spotify/current-song?key={auth_key}\"\r\n    return JsonResponse({\"redirect_url\": redirect_url}, status=status.HTTP_200_OK)\r\n\r\n\r\nclass CheckAuthentication(APIView):\r\n    def get(self, request, format=None):\r\n        key = self.request.session.session_key\r\n        if not self.request.session.exists(key):\r\n            self.request.session.create()\r\n            key = self.request.session.session_key\r\n        auth_status = is_spotify_authenticated(key)\r\n\r\n        if auth_status:\r\n            redirect_url = f\"http://127.0.0.1:8000/spotify/current-song?key={key}\"\r\n        else:\r\n            redirect_url = \"http://127.0.0.1:8000/spotify/redirect\"\r\n\r\n        return Response({\"redirect\": redirect_url}, status=status.HTTP_200_OK)\r\n\r\n\r\nclass CurrentSong(APIView):\r\n    def get(self, request, format=None):\r\n        key = request.GET.get(\"key\")\r\n        try:\r\n            token = Token.objects.get(user=key)\r\n        except Token.DoesNotExist:\r\n            return Response({\"error\": \"Token not found\"}, status=status.HTTP_404_NOT_FOUND)\r\n\r\n        endpoint = \"me/player/currently-playing\"\r\n        response = spotify_requests_execution(key, endpoint)\r\n\r\n        if \"error\" in response or \"item\" not in response:\r\n            return Response({}, status=status.HTTP_204_NO_CONTENT)\r\n\r\n        item = response.get(\"item\")\r\n        progress = response.get(\"progress_ms\")\r\n        is_playing = response.get(\"is_playing\")\r\n        duration = item.get(\"duration_ms\")\r\n        song_id = item.get(\"id\")\r\n        title = item.get(\"name\")\r\n        album_cover = item.get(\"album\", {}).get(\"images\", [{}])[0].get(\"url\")\r\n        artists = \", \".join(artist.get(\"name\") for artist in item.get(\"artists\", []))\r\n\r\n        song = {\r\n            \"id\": song_id,\r\n            \"title\": title,\r\n            \"artists\": artists,\r\n            \"duration\": duration,\r\n            \"is_playing\": is_playing,\r\n            \"album_cover\": album_cover,\r\n            \"progress\": progress,\r\n        }\r\n\r\n        return Response(song, status=status.HTTP_200_OK)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/views.py b/Api/views.py
--- a/Api/views.py	(revision 20e71625a71393f2bbbc82969af75b82011eaf08)
+++ b/Api/views.py	(date 1730746311768)
@@ -19,7 +19,7 @@
         }).prepare().url
         return Response({"auth_url": url}, status=status.HTTP_200_OK)
 
-
+#hello
 def spotify_redirect(request):
     code = request.GET.get('code')
     error = request.GET.get('error')
@@ -40,7 +40,7 @@
     ).json()
 
     print("Authorization Code:", code)
-    #print("Spotify Response:", response.status_code, response.json())
+    print("Spotify Response:", response.status_code, response.json())
 
     access_token = response.get('access_token')
     refresh_token = response.get('refresh_token')
Index: SpotifyWrapper/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for SpotifyWrapper project.\r\n\r\nGenerated by 'django-admin startproject' using Django 5.1.2.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/5.1/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/5.1/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-56foi3ozk=_lx6v$^2bsk00r)n($-%ar@nm2@x8yy6idh%gm05'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'rest_framework.authtoken',\r\n    'Api.apps.ApiConfig',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'SpotifyWrapper.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'SpotifyWrapper.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / \"db.sqlite3\",  # Stores the SQLite database in the project directory\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SpotifyWrapper/settings.py b/SpotifyWrapper/settings.py
--- a/SpotifyWrapper/settings.py	(revision 20e71625a71393f2bbbc82969af75b82011eaf08)
+++ b/SpotifyWrapper/settings.py	(date 1730746311768)
@@ -25,7 +25,7 @@
 # SECURITY WARNING: don't run with debug turned on in production!
 DEBUG = True
 
-ALLOWED_HOSTS = []
+ALLOWED_HOSTS = ['*']
 
 
 # Application definition
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"fixed random errors\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/db.sqlite3\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/db.sqlite3\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;aishanibal&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/AdithyaRajesh1/SpotifyWrapper.git&quot;,\r\n    &quot;accountId&quot;: &quot;1b76475c-5901-4984-8fbf-869bf5bdf017&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2oOaUJnnBJkv3cXjpz1xgE4eSAI\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Django Server.SpotifyWrapper.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenDjangoStructureViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;UserAuth&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SpotifyWrapper\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"SpotifyWrapper\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n        <env name=\"DJANGO_SETTINGS_MODULE\" value=\"SpotifyWrapper.settings\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"localhost\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-PY-242.20224.428\" />\r\n        <option value=\"bundled-python-sdk-80e8e15d2b92-39cff9de6eef-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.20224.428\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8ebb3b2a-d6e2-466a-8852-d90e5934e4e5\" name=\"Changes\" comment=\"\" />\r\n      <created>1730300651790</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1730300651790</updated>\r\n      <workItem from=\"1730300653221\" duration=\"184000\" />\r\n      <workItem from=\"1730743092250\" duration=\"1469000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"partial user auth + redirect\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730309034212</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730309034212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fixed random errors\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1730743322687</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1730743322687</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"partial user auth + redirect\" />\r\n    <MESSAGE value=\"fixed random errors\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fixed random errors\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 20e71625a71393f2bbbc82969af75b82011eaf08)
+++ b/.idea/workspace.xml	(date 1730746330594)
@@ -6,6 +6,9 @@
   <component name="ChangeListManager">
     <list default="true" id="8ebb3b2a-d6e2-466a-8852-d90e5934e4e5" name="Changes" comment="fixed random errors">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Api/credentials.py" beforeDir="false" afterPath="$PROJECT_DIR$/Api/credentials.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Api/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/Api/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SpotifyWrapper/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/SpotifyWrapper/settings.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
Index: Api/credentials.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CLIENT_ID = \"f657a8dcbb3242e580819d93dc1380c8\"\r\nCLIENT_SECRET = \"e69f8a6ee6e34266b9ab17cac81c0bb8\"\r\nREDIRECT_URI = \"http://localhost:8000/callback\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Api/credentials.py b/Api/credentials.py
--- a/Api/credentials.py	(revision 20e71625a71393f2bbbc82969af75b82011eaf08)
+++ b/Api/credentials.py	(date 1730746311768)
@@ -1,3 +1,3 @@
-CLIENT_ID = "f657a8dcbb3242e580819d93dc1380c8"
-CLIENT_SECRET = "e69f8a6ee6e34266b9ab17cac81c0bb8"
-REDIRECT_URI = "http://localhost:8000/callback"
\ No newline at end of file
+CLIENT_ID = "9f913852b772462792d678d78fcadfa5"
+CLIENT_SECRET = "d269676339f24a2cab18cb694b2fd9da"
+REDIRECT_URI = "http://127.0.0.1:8000/spotify/current-song"
\ No newline at end of file
